name: Android E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggers

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  ANDROID_SDK_VERSION: '33'
  ANDROID_BUILD_TOOLS_VERSION: '33.0.0'
  ANDROID_EMU_VERSION: '31'
  EMULATOR_TIMEOUT: 120  # Reduced timeout
  AVD_CACHE_VERSION: '1'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Reduced job timeout

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Clear SDK Cache
        run: |
          rm -rf $ANDROID_HOME/licenses $ANDROID_HOME/tools $ANDROID_HOME/cmdline-tools

      - name: Download Android Command Line Tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm cmdline-tools.zip

      - name: Accept Android SDK Licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Android SDK Packages
        run: |
          CMDLINE_TOOLS="$ANDROID_HOME/cmdline-tools/latest/bin"
          echo "Using SDK Manager from: $CMDLINE_TOOLS"
          "$CMDLINE_TOOLS/sdkmanager" --install \
            "platform-tools" \
            "platforms;android-${{ env.ANDROID_SDK_VERSION }}" \
            "build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}" \
            "emulator" \
            "system-images;android-${{ env.ANDROID_EMU_VERSION }};google_apis;x86_64"

      - name: Add adb to PATH
        run: |
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Create and Start Emulator
        run: |
          echo "no" | "$ANDROID_HOME/cmdline-tools/latest/bin/avdmanager" create avd \
            --name testEmulator \
            --package "system-images;android-${{ env.ANDROID_EMU_VERSION }};google_apis;x86_64" \
            --device 'Nexus 5X' \
            --force

          # Basic emulator configuration
          echo "hw.cpu.ncore=2" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "hw.ramSize=2048" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "hw.gpu.enabled=yes" >> ~/.android/avd/testEmulator.avd/config.ini

          $ANDROID_HOME/emulator/emulator -avd testEmulator \
            -no-window \
            -no-audio \
            -no-boot-anim \
            -gpu swiftshader_indirect \
            -memory 2048 \
            -cores 2 \
            -accel on &

      - name: Wait for Device
        run: |
          adb wait-for-device
          sleep 30

      - name: Setup Network
        run: |
          adb shell svc wifi enable
          sleep 10

      - name: Install APK
        run: |
          wget --no-check-certificate 'https://drive.google.com/uc?export=download&id=1vpmsQks5b_Q5rUGvsLUahrHwkOlu3Mtz' -O app.apk
          adb install app.apk
          echo "APK_PATH=$(pwd)/app.apk" >> $GITHUB_ENV

      - name: Run Tests
        run: npm run test:ci

      - name: Fix KVM permissions
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          sudo gpasswd -a $USER kvm
          sudo chmod 666 /dev/kvm

      - name: Wait for Emulator Boot
        timeout-minutes: 10
        run: |
          max_attempts=30
          counter=0
          until adb shell getprop sys.boot_completed 2>&1 | grep -q '1' || [ $counter -eq $max_attempts ]; do
            echo "Waiting for emulator to boot... (Attempt: $counter/$max_attempts)"
            sleep 5
            # Check emulator process
            if ! pgrep -f "emulator" > /dev/null; then
              echo "Emulator process died. Restarting..."
              $ANDROID_HOME/emulator/emulator -avd testEmulator -no-window &
            fi
            counter=$((counter + 1))
            sleep 10
          done

          if [ $counter -eq $max_attempts ]; then
            echo "Emulator boot timeout. Dumping logs..."
            adb logcat -d
            exit 1
          fi

          echo "Emulator booted successfully!"
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0

      - name: Install Dependencies
        run: npm install  

      - name: Verify APK Installation
        run: |
          adb shell pm list packages | grep com.willma.client.staging
          if [ $? -eq 0 ]; then
            echo "APK package found."
          else
            echo "APK package not found. Installation failed?"
            exit 1
          fi

      - name: Start Appium
        run: |
          npm run start:appium > appium.log 2>&1 &
          sleep 30

      - name: Verify Appium is Running
        run: |
          if grep -q "Appium REST http interface listener started on" appium.log; then
            echo "Appium is running and ready."
          else
            echo "Appium is not running or not ready."
            cat appium.log
            exit 1
          fi

      - name: Run Tests with Retry
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: npm run test:ci
          on_retry_command: |
            adb emu kill
            sleep 5
            $ANDROID_HOME/emulator/emulator -avd testEmulator -no-window &
            sleep 30
            adb wait-for-device

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            allure-results/
            screenshots/
            logs/
            appium.log
          retention-days: 14

      - name: Generate Allure Report
        if: always()
        run: |
          npm run generate-report

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
          retention-days: 14

  notify-manager:
    needs: e2e-tests
    if: always() && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: smtp.office365.com
          server_port: 587
          secure: false
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Android Tests Update - ${{ github.event.head_commit.message }}"
          to: fady@wilma.life, amr.ibrahim@willma.life
          from: "Willma CI/CD <${{ secrets.SMTP_USER }}>"
          html_body: |
            <div style="font-family: Arial, sans-serif; padding: 20px;">
              <h2 style="color: #1a73e8;">New Android Test Deployment</h2>
              <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px;">
                <p><strong>üì¶ Repository:</strong> ${{ github.repository }}</p>
                <p><strong>üîë Commit ID:</strong> <code>${{ github.sha }}</code></p>
                <p><strong>üë§ Author:</strong> ${{ github.actor }}</p>
                <p><strong>üìù Message:</strong> ${{ github.event.head_commit.message }}</p>
                <p><strong>üìÖ Date:</strong> ${{ github.event.head_commit.timestamp }}</p>
              </div>
              <p style="margin-top: 20px;">
                <a href="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
                   style="background-color: #1a73e8; color: white; padding: 10px 15px; text-decoration: none; border-radius: 4px;">
                  View Full Commit Details
                </a>
              </p>
              <p style="margin-top: 20px; color: #666;">
                Workflow Status: ${{ job.status }}<br>
                This is an automated notification from Willma CI/CD System
              </p>
            </div>