name: E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: $ANDROID_HOME
          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            android-sdk-${{ runner.os }}-

      - name: Clear SDK Cache
        run: |
          rm -rf $ANDROID_HOME/licenses $ANDROID_HOME/tools $ANDROID_HOME/cmdline-tools

      - name: Download Android Command Line Tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm cmdline-tools.zip

      - name: Accept SDK Licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Android SDK Packages
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "platforms;android-30" \
            "build-tools;30.0.3" \
            "emulator" \
            "system-images;android-30;default;x86"

      - name: Add adb to PATH
        run: echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Create AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            --name testAVD \
            --package "system-images;android-30;default;x86" \
            --device "pixel" \
            --force

      - name: Configure Emulator Settings
        run: |
          echo "hw.cpu.ncore=2" >> ~/.android/avd/testAVD.avd/config.ini
          echo "hw.ramSize=1536" >> ~/.android/avd/testAVD.avd/config.ini
          echo "hw.gpu.enabled=yes" >> ~/.android/avd/testAVD.avd/config.ini
          echo "hw.gpu.mode=swiftshader_indirect" >> ~/.android/avd/testAVD.avd/config.ini

      - name: Fix KVM permissions
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          sudo gpasswd -a $USER kvm
          sudo chmod 666 /dev/kvm

      - name: Verify KVM
        run: |
          if [ ! -e /dev/kvm ]; then
            echo "❌ KVM is not available."
            exit 1
          else
            echo "✅ KVM is available."
          fi

      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd testAVD \
            -no-audio -no-window -gpu swiftshader_indirect \
            -memory 1536 -no-boot-anim -no-snapshot-save &

          echo "⏳ Waiting 90 seconds for emulator to initialize..."
          sleep 90

      - name: Wait for Emulator Boot
        run: |
          adb wait-for-device
          until [[ "$(adb shell getprop sys.boot_completed | tr -d '\r')" == "1" ]]; do
            echo "Waiting for emulator to boot..."
            sleep 5
          done
          echo "✅ Emulator fully booted"

      - name: Configure System Properties
        run: |
          adb root
          adb wait-for-device
          adb shell "setprop debug.android.hardware.camera.external 1"
          adb shell "setprop ro.test.disable_native_bridge 1"

      - name: Disable Bluetooth in Emulator
        run: |
          adb shell settings put global bluetooth_on 0
          echo "Bluetooth disabled in the emulator."

      - name: List ADB Devices
        run: adb devices

      # ✅ Your test commands go below this step
      # Example:
      # - name: Run Detox Tests
      #   run: npm run test:e2e
