name: Android E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Create Directories
        run: mkdir -p screenshots logs apps

      - name: Download APK
        run: |
          mkdir -p apps
          FILEID="1vpmsQks5b_Q5rUGvsLUahrHwkOlu3Mtz"
          FILENAME="apps/app.apk"
          wget --quiet --save-cookies /tmp/cookies.txt \
            "https://docs.google.com/uc?export=download&id=${FILEID}" -O- | \
            sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1/p' > /tmp/confirm
          wget --quiet --load-cookies /tmp/cookies.txt \
            "https://docs.google.com/uc?export=download&id=${FILEID}&confirm=$(cat /tmp/confirm)" \
            -O "$FILENAME"
          echo "APK_PATH=$(pwd)/$FILENAME" >> $GITHUB_ENV
          echo "✅ APK downloaded"

      - name: Verify APK
        run: |
          if [ -f "apps/app.apk" ]; then
            echo "APK_PATH=$(pwd)/apps/app.apk" >> $GITHUB_ENV
            echo "✅ APK verified"
          else
            echo "❌ APK download failed"
            exit 1
          fi

      - name: Start & Configure Emulator
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          ram-size: 4096M
          disk-size: 8192M
          cores: 4
          profile: pixel_4
          emulator-boot-timeout: 600
          disable-animations: false        # we’ll turn them off in script
          force-avd-creation: false
          emulator-options: >-
            -no-snapshot-save
            -no-window
            -gpu swiftshader_indirect
            -noaudio
            -no-boot-anim
            -dns-server 8.8.8.8,8.8.4.4
          script: |
            #!/usr/bin/env bash
            set -euo pipefail

            echo "→ Sleeping 5s for emulator to start"
            sleep 5

            echo "→ Waiting for ADB to list the emulator"
            adb wait-for-device

            echo "→ Polling for boot completion (up to 5m)"
            i=0
            until adb shell getprop sys.boot_completed | grep -q "1"; do
              if [ "$i" -ge 30 ]; then
                echo "❌ Emulator never reported boot complete!"
                exit 1
              fi
              echo "… boot not complete yet ($((i+1))/30)"
              i=$((i+1))
              sleep 10
            done
            echo "✅ Boot completed"

            echo "→ Disabling animations (reduces flakiness)"
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0

            echo "→ Verifying network inside emulator"
            if adb shell ping -c 2 google.com; then
              echo "✅ Internet OK"
            else
              echo "⚠️ Internet unreachable; retrying DNS settings"
              adb shell settings put global http_proxy ""
              sleep 5
            fi

            echo "→ Final ADB device list:"
            adb devices -l

      - name: Install APK on Emulator
        run: |
          echo "→ Installing APK (${{ env.APK_PATH }})"
          for trial in 1 2 3; do
            if adb install -r -t -g "${{ env.APK_PATH }}"; then
              echo "✅ Installed on trial #$trial"
              break
            fi
            echo "… retry #$trial failed"
            sleep 5
          done

          echo "→ Verifying package presence"
          if adb shell pm list packages | grep -q "com.willma.staging"; then
            echo "✅ Package installed"
          else
            echo "❌ Package not found"
            exit 1
          fi

      - name: Start Appium Server
        run: |
          echo "→ Starting Appium server…"
          npx appium > logs/appium.log 2>&1 &
          sleep 5
          if ! pgrep -f appium; then
            echo "❌ Appium did not start"
            cat logs/appium.log
            exit 1
          fi
          echo "✅ Appium is running"

      - name: Run E2E Tests
        run: |
          echo "→ Running tests…"
          if npm run test:ci; then
            echo "✅ Tests passed"
          else
            echo "❌ Tests failed – capturing logcat"
            adb logcat -d > logs/test_failure.log
            exit 1
          fi

      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            screenshots/
            logs/*.log
            test-results/
          if-no-files-found: warn

  notify-manager:
    needs: e2e-tests
    if: always() && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: smtp.office365.com
          server_port: 587
          secure: false
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Android Tests Update – ${{ github.event.head_commit.message }}"
          to: fady@wilma.life, amr.ibrahim@willma.life
          from: "Willma CI/CD <${{ secrets.SMTP_USER }}>"
          html_body: |
            <div style="font-family: Arial, sans-serif; padding: 20px;">
              <h2 style="color: #1a73e8;">New Android Test Deployment</h2>
              <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px;">
                <p><strong>📦 Repo:</strong> ${{ github.repository }}</p>
                <p><strong>🔑 Commit:</strong> <code>${{ github.sha }}</code></p>
                <p><strong>👤 Author:</strong> ${{ github.actor }}</p>
                <p><strong>📝 Message:</strong> ${{ github.event.head_commit.message }}</p>
                <p><strong>📅 Date:</strong> ${{ github.event.head_commit.timestamp }}</p>
              </div>
              <p style="margin-top: 20px;">
                <a href="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
                   style="background-color: #1a73e8; color: white; padding: 10px 15px; text-decoration: none; border-radius: 4px;">
                  View Commit
                </a>
              </p>
              <p style="margin-top: 20px; color: #666;">
                Workflow Status: ${{ job.status }}<br>
                (Automated by Willma CI/CD)
              </p>
            </div>
