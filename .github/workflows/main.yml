name: Android E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      apk_CI_PATH: ${{ github.workspace }}/apps/app-release-trainer.apk

    steps:
      # 1. Checkout & runtimes
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Set up Java 17 (Zulu)
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 2. Cache SDK & node_modules
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: ${{ env.ANDROID_HOME }}
          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: android-sdk-${{ runner.os }}-

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node-modules-${{ runner.os }}-

      # 3. Install deps
      - name: Install NPM dependencies
        run: npm ci

      # 4. Make sure adb is on PATH
      - name: Add ADB to PATH
        run: echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      # 5. Bring up a fast, x86_64 Pixel 4 API‑30 emulator and run your tests in one shot
      - name: Run emulator, install APK, start Appium & run WDIO
        uses: reactivecircus/android-emulator-runner@v2.34.0
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Pixel_4
          force-avd-creation: true
          emulator-options: |
            -no-window
            -no-audio
            -gpu host
            -no-boot-anim
            -memory 2048
          script: |
            set -e

            echo "✅ Emulator is up. Installing APK..."
            for i in 1 2 3; do
              if adb install -r -t -g "${apk_CI_PATH}"; then
                echo "✅ APK installed"
                break
              fi
              echo "⚠️ Retry #$i"
              sleep 5
            done

            echo "✅ Starting Appium..."
            npx appium > logs/appium.log 2>&1 &
            sleep 5

            echo "✅ Running WDIO tests..."
            npx wdio run ./wdio.ci.conf.js

      # 6. Upload artifacts
      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: screenshots
